<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.1.2" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.13.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="c3.ml"/>
<theory name="C3">
 <goal name="Make.list_seq_mem">
 </goal>
 <goal name="Make.head_is_at_index_zero">
 <proof prover="0" timelimit="1" memlimit="1000"><result status="timeout" time="1.000000" steps="183398"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000"><result status="timeout" time="1.000000" steps="187181"/></proof>
 <proof prover="2"><result status="timeout" time="1.000000" steps="33207"/></proof>
 <proof prover="3"><result status="timeout" time="1.000000" steps="1805724"/></proof>
 <transf name="split_vc" >
  <goal name="head_is_at_index_zero.0">
  <proof prover="0" timelimit="30"><result status="timeout" time="30.000000" steps="1816103"/></proof>
  <proof prover="1"><result status="timeout" time="30.000000" steps="4396386"/></proof>
  <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="254490"/></proof>
  <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="34943600"/></proof>
  </goal>
 </transf>
 <transf name="split_vc" >
  <goal name="head_is_at_index_zero.0">
  <proof prover="0" timelimit="30"><result status="timeout" time="30.000000" steps="1333951"/></proof>
  <proof prover="1"><result status="timeout" time="30.000000" steps="6175957"/></proof>
  <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="252752"/></proof>
  <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="38304484"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.tail_is_above_zero">
 <proof prover="0" timelimit="1" memlimit="1000"><result status="timeout" time="1.000000" steps="205864"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000"><result status="timeout" time="1.000000" steps="227479"/></proof>
 <proof prover="2"><result status="timeout" time="1.000000" steps="15366"/></proof>
 <proof prover="3"><result status="timeout" time="1.000000" steps="2518013"/></proof>
 <transf name="split_vc" >
  <goal name="tail_is_above_zero.0">
  <proof prover="0" memlimit="2000"><result status="timeout" time="5.000000" steps="420084"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="1047769"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="66056"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="4.216335" steps="9232625"/></proof>
  <transf name="inline_goal" >
   <goal name="tail_is_above_zero.0.0">
   <transf name="split_all_full" >
    <goal name="tail_is_above_zero.0.0.0">
    <proof prover="0" timelimit="30"><result status="timeout" time="30.000000" steps="1410826"/></proof>
    <proof prover="1"><result status="timeout" time="30.000000" steps="7676572"/></proof>
    <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="244975"/></proof>
    <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="19566393"/></proof>
    <transf name="assert" arg1="( i &lt;&gt; 0)">
     <goal name="tail_is_above_zero.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="6.572464" steps="762199"/></proof>
     </goal>
     <goal name="tail_is_above_zero.0.0.0.1">
     <proof prover="0" timelimit="30"><result status="timeout" time="30.000000" steps="1302707"/></proof>
     <proof prover="1"><result status="timeout" time="30.000000" steps="7681175"/></proof>
     <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="345338"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="19571613"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.is_removed_not_mem">
 </goal>
 <goal name="Make.is_removed_length">
 </goal>
 <goal name="Make.is_removed_length_for_lists">
 </goal>
 <goal name="Make.sum_lengths_of_lists_l_e">
 </goal>
 <goal name="Make.sum_lengths_of_lists_l">
 </goal>
 <goal name="Make.sum_lengths_is_positive">
 </goal>
 <goal name="Make.is_removed_preserves_distinct">
 </goal>
 <goal name="Make.is_valid_on_tail">
 </goal>
 <goal name="Make.is_candidate_on_distinct">
 </goal>
 <goal name="Make.distinct_head_not_in_tail">
 </goal>
 <goal name="Make.length_strictly_decreases_if_element_removed">
 </goal>
 <goal name="Make.in_list_not_in_head_must_be_in_tail">
 </goal>
 <goal name="Make.candidate_is_only_head">
 <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="196171"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="271012"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="16305"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="2698074"/></proof>
 <transf name="split_vc" >
  <goal name="candidate_is_only_head.0">
  <proof prover="3" obsolete="true"><result status="valid" time="0.034449" steps="176443"/></proof>
  </goal>
  <goal name="candidate_is_only_head.1">
  <proof prover="3" obsolete="true"><result status="valid" time="0.416702" steps="981221"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.candidate_is_always_first" proved="true">
 <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="115364"/></proof>
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="139707"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="13415"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="2192441"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="candidate_is_always_first.0" proved="true">
  <proof prover="2"><result status="valid" time="0.638109" steps="6906"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.if_linearization_is_possible_is_acyclic">
 </goal>
 <goal name="Make.acyclic_is_ordered">
 </goal>
 <goal name="Make.acyclic_has_head_candidate">
 </goal>
 <goal name="Make.acyclic_and_has_candidate">
 </goal>
 <goal name="Make.remove_preserves_order">
 </goal>
 <goal name="Make.acyclic_concat_with_list_of_unique_elements_is_acyclic">
 </goal>
 <goal name="Make.for_all&#39;vc" expl="VC for for_all">
 </goal>
 <goal name="Make.is_candidate_valid&#39;vc" expl="VC for is_candidate_valid">
 </goal>
 <goal name="Make.filter_heads&#39;vc" expl="VC for filter_heads">
 </goal>
 <goal name="Make.remove_head&#39;vc" expl="VC for remove_head">
 </goal>
 <goal name="Make.remove_aux&#39;vc" expl="VC for remove_aux">
 </goal>
 <goal name="Make.remove&#39;vc" expl="VC for remove">
 </goal>
 <goal name="Make.merge&#39;vc" expl="VC for merge">
 <transf name="split_vc" >
  <goal name="merge&#39;vc.0" expl="unreachable point">
  </goal>
  <goal name="merge&#39;vc.1" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.2" expl="variant decrease">
  </goal>
  <goal name="merge&#39;vc.3" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.4" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.5" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.6" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.7" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.8" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.9" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.10" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.11" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.12" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.13" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.14" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.15" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.16" expl="variant decrease">
  </goal>
  <goal name="merge&#39;vc.17" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.18" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.19" expl="precondition">
  </goal>
  <goal name="merge&#39;vc.20" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.21" expl="postcondition">
  <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="112648"/></proof>
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.000000" steps="149358"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="9915"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.000000" steps="2006794"/></proof>
  <transf name="split_vc" >
   <goal name="merge&#39;vc.21.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.044701" steps="229696"/></proof>
   </goal>
   <goal name="merge&#39;vc.21.1" expl="postcondition">
   <proof prover="0" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="366026"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="492433"/></proof>
   <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="41109"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="4.365224" steps="9691233"/></proof>
   <transf name="instantiate" arg1="candidate_is_always_first" arg2="lins,candidate">
    <goal name="merge&#39;vc.21.1.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="merge&#39;vc.21.1.0.0" expl="destruct premise" proved="true">
     <proof prover="2"><result status="valid" time="0.215879" steps="2297"/></proof>
     </goal>
     <goal name="merge&#39;vc.21.1.0.1" expl="postcondition">
     <proof prover="0" memlimit="2000"><result status="timeout" time="5.000000" steps="349887"/></proof>
     <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="698419"/></proof>
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="48538"/></proof>
     <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="4.320743" steps="10309739"/></proof>
     <transf name="inline_goal" >
      <goal name="merge&#39;vc.21.1.0.1.0" expl="postcondition">
      <transf name="split_all_full" >
       <goal name="merge&#39;vc.21.1.0.1.0.0" expl="postcondition">
       <proof prover="0" memlimit="2000"><result status="timeout" time="5.000000" steps="400644"/></proof>
       <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="650880"/></proof>
       <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="48583"/></proof>
       <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="4.274583" steps="10750534"/></proof>
       <transf name="inline_goal" >
        <goal name="merge&#39;vc.21.1.0.1.0.0.0" expl="postcondition">
        <proof prover="0" timelimit="30"><result status="timeout" time="30.000000" steps="1742439"/></proof>
        <proof prover="1"><result status="timeout" time="30.000000" steps="1701546"/></proof>
        <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="261760"/></proof>
        <proof prover="3" timelimit="30" memlimit="4000"><result status="outofmemory" time="19.038887"/></proof>
        <transf name="destruct_term" arg1="lins">
         <goal name="merge&#39;vc.21.1.0.1.0.0.0.0" expl="postcondition">
         <proof prover="0" memlimit="2000"><result status="timeout" time="5.000000" steps="404278"/></proof>
         <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="533365"/></proof>
         <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="50182"/></proof>
         <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="10428408"/></proof>
         <transf name="instantiate" arg1="Hinst" arg2="x2">
          <goal name="merge&#39;vc.21.1.0.1.0.0.0.0.0" expl="postcondition">
          <proof prover="0" memlimit="2000"><result status="timeout" time="5.000000" steps="479415"/></proof>
          <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="465647"/></proof>
          <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="52673"/></proof>
          <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="10274552"/></proof>
          <transf name="inline_goal" >
           <goal name="merge&#39;vc.21.1.0.1.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0" timelimit="30"><result status="timeout" time="26.424299" steps="1779445"/></proof>
           <proof prover="1"><result status="timeout" time="30.000000" steps="1897354"/></proof>
           <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="257282"/></proof>
           <proof prover="3" timelimit="30" memlimit="4000"><result status="outofmemory" time="21.375061"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="merge&#39;vc.21.1.0.1.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="3"><result status="valid" time="0.015806" steps="26529"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="merge&#39;vc.22" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.23" expl="postcondition">
  </goal>
  <goal name="merge&#39;vc.24" expl="postcondition">
  </goal>
 </transf>
 </goal>
 <goal name="Make.c3_linearization&#39;vc" expl="VC for c3_linearization">
 </goal>
</theory>
</file>
</why3session>
